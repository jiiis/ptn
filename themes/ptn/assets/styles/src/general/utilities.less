/******************** flex ********************/
@import 'utilities/flex';

/******************** opacity ********************/
.ptn-util__opacity(@opacity) {
  opacity: @opacity;
  @opacity-ie: (@opacity * 100);
  filter: ~'alpha(opacity=@{opacity-ie})';
}

/******************** text ********************/
.ptn-util__text-overflow_truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/******************** user-select ********************/
.ptn-util__user-select_none {
  user-select: none;
}

/******************** pointer-events ********************/
.ptn-util__pointer-events_none {
  pointer-events: none;
}

/******************** input ********************/
.ptn-util__input-placeholder-color(@color) {
  &::-webkit-input-placeholder {
    color: @color;
  }

  &::-moz-placeholder {
    color: @color;
  }

  &:-moz-placeholder {
    color: @color;
  }

  &:-ms-input-placeholder {
    color: @color;
  }
}

/******************** hover ********************/
.ptn-util__hover_text(@color, @background: initial) {
  &:hover, &.ptn-util__trigger_on {
    color: @color;
    background: @background;
  }

  .ptn-util__transition;
}

.ptn-util__hover_pop(@background: @ptn-util__color_lighter_transparent, @borderRadius: @ptn-util__border-radius_small) {
  position: relative;
  cursor: pointer;

  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: inherit;
    height: inherit;
    border-radius: @borderRadius;
    background: @background;

    .ptn-util__transition;
    .ptn-util__opacity(0);
    .ptn-util__transform_scale(0);
  }

  &:hover:before, &.ptn-util__trigger_on:before {
    .ptn-util__opacity(1);
    .ptn-util__transform_scale(1);
  }
}

/******************** clearfix ********************/
.ptn-util__clearfix {
  &:before, &:after {
    content: ' ';
    display: table;
  }

  &:after {
    clear: both;
  }
}

/******************** transition ********************/
.ptn-util__transition(@property: all, @duration: @ptn-util__duration_faster, @timingFunction: ease-in-out, @delay: 0ms) {
  transition: @property @duration @timingFunction @delay;
}

/******************** transform ********************/
.ptn-util__transform_scale(@ratio) {
  transform: scale(@ratio);
}

.ptn-util__transform_scale(@ratioX, @ratioY) {
  transform: scale(@ratioX, @ratioY);
}

.ptn-util__transform_rotate(@degrees) {
  transform: rotate(@degrees);
}

.ptn-util__transform_scale_rotate(@ratio, @degrees) {
  transform: scale(@ratio) rotate(@degrees);
}

.ptn-util__transform_translate3d(@x, @y, @z) {
  transform: translate3d(@x, @y, @z);
}

/******************** animation ********************/
.ptn-util__animation(@name, @duration, @timingFunction: ease, @iterationCount: 1) {
  animation: @name @duration @timingFunction 0ms @iterationCount normal both;
}

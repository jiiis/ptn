/******************** flex ********************/
@import 'utilities/flex';

/******************** opacity ********************/
.ptn-util__opacity(@opacity) {
  opacity: @opacity;
  @opacity-ie: (@opacity * 100);
  filter: ~'alpha(opacity=@{opacity-ie})';
}

/******************** text ********************/
.ptn-util__text-overflow_truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/******************** user-select ********************/
.ptn-util__user-select_none {
  user-select: none;
}

/******************** pointer-events ********************/
.ptn-util__pointer-events_none {
  pointer-events: none;
}

/******************** hover ********************/
.ptn-util__text-hover(@color, @background: initial) {
  &:hover {
    color: @color;
    background: @background;
  }

  .ptn-util__transition(all, @ptn-util__duration_fast);
}

/******************** clearfix ********************/
.ptn-util__clearfix {
  &:before, &:after {
    content: ' ';
    display: table;
  }

  &:after {
    clear: both;
  }
}

/******************** transition ********************/
.ptn-util__transition(@property: all, @duration: @ptn-util__duration_faster, @timingFunction: ease-in-out, @delay: 0ms) {
  transition: @property @duration @timingFunction @delay;
}

/******************** transform ********************/
.ptn-util__transform_scale(@ratio) {
  transform: scale(@ratio);
}

.ptn-util__transform_scale(@ratioX, @ratioY) {
  transform: scale(@ratioX, @ratioY);
}

.ptn-util__transform_rotate(@degrees) {
  transform: rotate(@degrees);
}

.ptn-util__transform_scale_rotate(@ratio, @degrees) {
  transform: scale(@ratio) rotate(@degrees);
}

.ptn-util__transform_translate3d(@x, @y, @z) {
  transform: translate3d(@x, @y, @z);
}

/******************** animation ********************/
.ptn-util__animation(@name, @duration) {
  animation-name: @name;
  animation-duration: @duration;
  animation-fill-mode: both;
}
